[{"/app/src/index.js":"1","/app/src/Routes.js":"2","/app/src/user/AdminDashBoard.js":"3","/app/src/user/Signup.js":"4","/app/src/user/Signin.js":"5","/app/src/user/UserDashBoard.js":"6","/app/src/admin/UpdateProduct.js":"7","/app/src/admin/ManageProducts.js":"8","/app/src/admin/ManageCategories.js":"9","/app/src/admin/AddProduct.js":"10","/app/src/admin/AddCategory.js":"11","/app/src/core/Home.js":"12","/app/src/auth/helper/PrivateRoutes.js":"13","/app/src/auth/helper/AdminRoutes.js":"14","/app/src/core/Base.js":"15","/app/src/backend.js":"16","/app/src/admin/helper/adminapicall.js":"17","/app/src/auth/helper/index.js":"18","/app/src/core/Menu.js":"19"},{"size":152,"mtime":1608743720000,"results":"20","hashOfConfig":"21"},{"size":1547,"mtime":1608909066000,"results":"22","hashOfConfig":"21"},{"size":2248,"mtime":1608902988000,"results":"23","hashOfConfig":"21"},{"size":2977,"mtime":1631961946846,"results":"24","hashOfConfig":"21"},{"size":3012,"mtime":1608895782000,"results":"25","hashOfConfig":"21"},{"size":238,"mtime":1608895170000,"results":"26","hashOfConfig":"21"},{"size":5502,"mtime":1608911986000,"results":"27","hashOfConfig":"21"},{"size":2066,"mtime":1608910566000,"results":"28","hashOfConfig":"21"},{"size":1965,"mtime":1608913208000,"results":"29","hashOfConfig":"21"},{"size":4839,"mtime":1608907190000,"results":"30","hashOfConfig":"21"},{"size":2082,"mtime":1608900740000,"results":"31","hashOfConfig":"21"},{"size":687,"mtime":1632059847422,"results":"32","hashOfConfig":"21"},{"size":547,"mtime":1608895002000,"results":"33","hashOfConfig":"21"},{"size":575,"mtime":1608894994000,"results":"34","hashOfConfig":"21"},{"size":1100,"mtime":1608748620000,"results":"35","hashOfConfig":"21"},{"size":50,"mtime":1608745564000,"results":"36","hashOfConfig":"21"},{"size":2642,"mtime":1608913140000,"results":"37","hashOfConfig":"21"},{"size":1364,"mtime":1608893360000,"results":"38","hashOfConfig":"21"},{"size":2062,"mtime":1608896106000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ssickg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["85","86"],"/app/src/Routes.js",[],"/app/src/user/AdminDashBoard.js",["87"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport Base from '../core/Base'\r\n\r\n\r\nconst AdminDashboard = () => {\r\n\r\n  const { user: { name, email, role } } = isAuthenticated()\r\n\r\n  const adminLeftPart = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header bg-dark text-white\">Admin Navigation</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/category\" className=\"nav-link text-success\">Create Categories</Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/categories\" className=\"nav-link text-success\">Manage Categories</Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/create/product\" className=\"nav-link text-success\">Create Products</Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/products\" className=\"nav-link text-success\">Manage Products</Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link to=\"/admin/orders\" className=\"nav-link text-success\">Manage Orders</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const adminRightPart = () => {\r\n    return (\r\n      <div className=\"card mb-4\">\r\n        <h4 className=\"card-header\">Admin Info <span className=\"badge badge-danger\">Admin Area</span></h4>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"badge badge-success mr-2\">Name:</span> {name}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"badge badge-success mr-2\">Email:</span> {email}\r\n            </li>\r\n          </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Base className=\"container bg-success p-4\" title=\"Welcome to admin dashboard\" description=\"Manage your products here.\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          {adminLeftPart()}\r\n        </div>\r\n        <div className=\"col-9\">\r\n          {adminRightPart()}\r\n        </div>\r\n\r\n      </div>\r\n    </Base>\r\n\r\n  )\r\n}\r\n\r\nexport default AdminDashboard","/app/src/user/Signup.js",[],"/app/src/user/Signin.js",["88"],"import React, { useState } from 'react'\r\nimport Base from \"../core/Base\"\r\nimport { Link, Redirect } from \"react-router-dom\"\r\nimport { signin, authenticate, isAuthenticated } from '../auth/helper'\r\n\r\nconst Signin = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"lekman@gmail.com\",\r\n    password: \"lekman\",\r\n    error: \"\",\r\n    loading: false,\r\n    didRedirect: false\r\n  })\r\n\r\n  const { email, password, error, loading, didRedirect } = values\r\n  const { user } = isAuthenticated();\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, error: false, [name]: event.target.value })\r\n  }\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setValues({ ...values, error: false, loading: true })\r\n    signin({ email, password })\r\n      .then(data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, loading: false })\r\n        }\r\n        else {\r\n          authenticate(data, () => {\r\n            setValues({\r\n              ...values,\r\n              didRedirect: true\r\n            })\r\n          })\r\n        }\r\n      })\r\n      .catch(console.log(\"sign in request failed\"))\r\n  }\r\n\r\n  const performRedirect = () => {\r\n    if (didRedirect) {\r\n      if (user && user.role === 1) {\r\n        return <Redirect tp=\"/admin/dashboard\"/>\r\n      } else {\r\n        return <Redirect tp=\"/user/dashboard\"/>\r\n      }\r\n    }\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n  }\r\n\r\n  const loadingMessage = () => {\r\n    return (\r\n      loading && (\r\n        <div className=\"alert alert-info\">\r\n          <h2>Loading...</h2>\r\n        </div>\r\n      )\r\n     )\r\n  }\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <div className=\"alert alert-danger\" style={{ display: error ? \"\" : \"none\" }}>\r\n            {error}\r\n          </div>\r\n        </div></div>)\r\n  }\r\n  const signinForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3 text-left\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-light\">Email:</label>\r\n              <input className=\"form-control\" type=\"email\" value={email} onChange={handleChange(\"email\")} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-light\">Password:</label>\r\n              <input className=\"form-control\" type=\"password\" value={password} onChange={handleChange(\"password\")} />\r\n            </div>\r\n            <button className=\"btn btn-success btn-block\" onClick={onSubmit}>Sign In</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Base title=\"Sign In page\" description=\"A page for user to sign In ..!\">\r\n      {loadingMessage()}\r\n      {errorMessage()}\r\n      {signinForm()}\r\n      {performRedirect()}\r\n      <p className=\"text-white text-center\">{JSON.stringify(values)}</p>\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default Signin","/app/src/user/UserDashBoard.js",[],"/app/src/admin/UpdateProduct.js",["89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getCategories,\r\n  getProduct,\r\n  updateProduct\r\n} from \"./helper/adminapicall\";\r\nimport { isAuthenticated } from \"../auth/helper\";\r\n\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    photo: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    getaRedirect: false,\r\n    formData: \"\"\r\n  });\r\n\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    stock,\r\n    categories,\r\n    category,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    getaRedirect,\r\n    formData\r\n  } = values;\r\n\r\n  const preload = productId => {\r\n    getProduct(productId).then(data => {\r\n      //console.log(data);\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        preloadCategories();\r\n        setValues({\r\n          ...values,\r\n          name: data.name,\r\n          description: data.description,\r\n          price: data.price,\r\n          category: data.category._id,\r\n          stock: data.stock,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const preloadCategories = () => {\r\n    getCategories().then(data => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          categories: data,\r\n          formData: new FormData()\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    preload(match.params.productId);\r\n  }, []);\r\n\r\n  //TODO: work on it\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: \"\", loading: true });\r\n\r\n    updateProduct(match.params.productId, user._id, token, formData).then(\r\n      data => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            name: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            photo: \"\",\r\n            stock: \"\",\r\n            loading: false,\r\n            createdProduct: data.name\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleChange = name => event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, [name]: value });\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div\r\n      className=\"alert alert-success mt-3\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h4>{createdProduct} updated successfully</h4>\r\n    </div>\r\n  );\r\n  const warningMessage = () => {\r\n    return(<div className=\"alert alert-danger mt-3\" style={{display: error?\"\":\"none\"}}>\r\n        <h4>{error}</h4>\r\n    </div>)\r\n  }\r\n\r\n  const createProductForm = () => (\r\n    <form>\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories &&\r\n            categories.map((cate, index) => (\r\n              <option key={index} value={cate._id}>\r\n                {cate.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Stock\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        className=\"btn btn-outline-success mb-3\"\r\n      >\r\n        Update Product\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Base\r\n      title=\"Add a product here!\"\r\n      description=\"Welcome to product creation section\"\r\n      className=\"container bg-info p-4\"\r\n    >\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">\r\n        Admin Home\r\n      </Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}{warningMessage()}\r\n          {createProductForm()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","/app/src/admin/ManageProducts.js",[],"/app/src/admin/ManageCategories.js",[],"/app/src/admin/AddProduct.js",["93","94","95","96"],"import React,{useState,useEffect} from 'react'\r\nimport { Link,Redirect } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport Base from \"../core/Base\"\r\nimport { createProduct, getCategories } from './helper/adminapicall'\r\n  \r\nconst AddProduct = () => {\r\n  const {user,token} = isAuthenticated()\r\n\r\n  const [values, setValues] = useState({\r\n    name:\"\",\r\n    description: \"\",\r\n    price:\"\",\r\n    stock:\"\",\r\n    photo:\"\",\r\n    categories: [],\r\n    category: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: false,\r\n    getRedirect: false,\r\n    formData: \"\"\r\n  })\r\n  const {name,description,price,stock,categories,category,loading,error,createdProduct,getRedirect,formData} = values\r\n  \r\n  const preload = () => {\r\n     getCategories().then(data=>{\r\n       if(data.error) {\r\n         setValues({...values,error:data.error})\r\n       } else {\r\n         setValues({...values,categories: data,formData: new FormData()})\r\n         console.log(\"categories\",data)\r\n       }\r\n     })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    preload()\r\n  }, [])\r\n\r\n  const handleChange = name=> event => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value\r\n    formData.set(name,value);\r\n    setValues({...values,[name]:value})\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setValues({...values,error:\"\",loading:true})\r\n    createProduct(user._id,token,formData).then(data=>{\r\n      if(data.error) {\r\n        setValues({...values,error:data.error})\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          price: \"\",\r\n          photo: \"\",\r\n          stock: \"\",\r\n          loading: false,\r\n          createdProduct: data.name,\r\n          getRedirect: true,\r\n          loading:true\r\n        })\r\n      }\r\n    })\r\n  }\r\n  const createProductForm = () => (\r\n    <form >\r\n      <span>Post photo</span>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-block btn-success\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image\"\r\n            placeholder=\"choose a file\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          name=\"photo\"\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Price\"\r\n          value={price}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          placeholder=\"Category\"\r\n        >\r\n          <option>Select</option>\r\n          {categories && (\r\n            categories.map((cate,index)=> (\r\n              <option key={index} value={cate._id}>{cate.name}</option>\r\n            ))\r\n          )}\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input\r\n          onChange={handleChange(\"stock\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Quantity\"\r\n          value={stock}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" onClick={onSubmit} className=\"btn btn-outline-success mb-3\">\r\n        Create Product\r\n      </button>\r\n    </form>\r\n  );\r\n  const successMessage = () => {\r\n    return(<div className=\"alert alert-success mt-3\" style={{display: createdProduct?\"\":\"none\"}}>\r\n        <h4>{createdProduct} created successfully</h4>\r\n    </div>)\r\n  }\r\n\r\n  const warningMessage = () => {\r\n    return(<div className=\"alert alert-danger mt-3\" style={{display: error?\"\":\"none\"}}>\r\n        <h4>{error}</h4>\r\n    </div>)\r\n  }\r\n  const redirectHome = () => {\r\n    if(loading) {\r\n      setTimeout(\r\n        () => <Redirect to=\"/admin/dashboard\" />, \r\n        2000\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Base title=\"Add a product here\" description=\"welcome to product creation section\" className=\"container bg-info p-4\">\r\n      <Link to=\"/admin/dashboard\" className=\"btn btn-md btn-dark mb-3\">Admin Home</Link>\r\n      <div className=\"row bg-dark text-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}{warningMessage()}\r\n          {createProductForm()}\r\n          {redirectHome()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  )\r\n}\r\n\r\nexport default AddProduct;","/app/src/admin/AddCategory.js",["97","98"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isAuthenticated } from '../auth/helper'\r\nimport Base from '../core/Base'\r\nimport { createCategory } from './helper/adminapicall'\r\n\r\nconst AddCategory = () => {\r\n  const [name, setName] = useState(\"\")\r\n  const [error, setError] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const goBack = () => {\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <Link className=\"btn btn-sm btn-success mb-3\" to=\"/admin/dashboard\">\r\n          Admin Home\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n  const handleChange =  (e) => {\r\n    setError(\"\")\r\n    setName(e.target.value)\r\n  }\r\n  const onSubmit =  (e) => {\r\n    e.preventDefault();\r\n    setError(\"\")\r\n    setSuccess(false)\r\n    //backend request\r\n    createCategory(user._id,token,{name})\r\n    .then(data=>{\r\n      if(data.error) {\r\n        setError(true)\r\n      } else {\r\n        setError(\"\")\r\n        setSuccess(true)\r\n        setName(\"\")\r\n      }\r\n    })\r\n  }\r\n\r\n  const successMessage = () => {\r\n    if(success) {\r\n      return (<h4 className=\"text-success\">{`Category  created successfully`}</h4>)\r\n    }\r\n  }\r\n  const warningMessage = (params) => {\r\n    \r\n  }\r\n\r\n  const myCategoryForm = () => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <p className=\"lead\"><b>Enter the category</b></p>\r\n        <input type=\"text\" className=\"form-control my-3\" onChange={handleChange} value={name} autoFocus required\r\n          placeholder=\"For Ex.Summer\" />\r\n        <button className=\"btn btn-outline-info\" onClick={onSubmit}>Create Category</button>\r\n      </div>\r\n    </form>\r\n  )\r\n  return (\r\n    <Base title=\"Create a Category Here\" description=\"Add a new category for new tshirts\" className=\"container bg-info p-4\">\r\n      <div className=\"row bg-white rounded\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {successMessage()}\r\n          {myCategoryForm()}{goBack()}\r\n        </div>\r\n      </div>\r\n    </Base>\r\n  )\r\n}\r\n\r\n\r\nexport default AddCategory","/app/src/core/Home.js",[],"/app/src/auth/helper/PrivateRoutes.js",[],"/app/src/auth/helper/AdminRoutes.js",[],"/app/src/core/Base.js",["99"],"import React from 'react'\r\nimport { API } from '../backend'\r\nimport Menu from \"./Menu\"\r\n\r\nconst Base = ({\r\n  title=\"MY Title\",\r\n  description=\"My description\",\r\n  className=\"bg-dark text-white p-4\",\r\n  children\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Menu/>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"jumbotron bg-dark text-white text-center\">\r\n          <h2 className=\"display-4\">{title}</h2>\r\n          <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n      <footer className=\"footer bg-dark mt-auto py-3\">\r\n          <div className=\"container-fluid bg-success text-white text-center\">\r\n            <h4>If you got any questions, feel free to reach out !</h4>\r\n            <button className=\"btn btn-warning btn-lg\">Contact Us</button>\r\n          </div>\r\n          <div className=\"container\">\r\n            <span className=\"text-muted\">An Amazing <span className=\"text-white\">MERN</span> Bootcamp</span>\r\n          </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Base;","/app/src/backend.js",[],"/app/src/admin/helper/adminapicall.js",[],"/app/src/auth/helper/index.js",[],"/app/src/core/Menu.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":9,"column":32,"nodeType":"106","messageId":"107","endLine":9,"endColumn":36},{"ruleId":"104","severity":1,"message":"108","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":36,"column":5,"nodeType":"106","messageId":"107","endLine":36,"endColumn":13},{"ruleId":"104","severity":1,"message":"110","line":37,"column":5,"nodeType":"106","messageId":"107","endLine":37,"endColumn":12},{"ruleId":"104","severity":1,"message":"111","line":40,"column":5,"nodeType":"106","messageId":"107","endLine":40,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":79,"column":6,"nodeType":"114","endLine":79,"endColumn":8,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"109","line":24,"column":50,"nodeType":"106","messageId":"107","endLine":24,"endColumn":58},{"ruleId":"104","severity":1,"message":"116","line":24,"column":88,"nodeType":"106","messageId":"107","endLine":24,"endColumn":99},{"ruleId":"112","severity":1,"message":"117","line":39,"column":6,"nodeType":"114","endLine":39,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":63,"column":11,"nodeType":"121","messageId":"122","endLine":63,"endColumn":18},{"ruleId":"104","severity":1,"message":"123","line":9,"column":10,"nodeType":"106","messageId":"107","endLine":9,"endColumn":15},{"ruleId":"104","severity":1,"message":"124","line":49,"column":9,"nodeType":"106","messageId":"107","endLine":49,"endColumn":23},{"ruleId":"104","severity":1,"message":"125","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'category' is assigned a value but never used.","'loading' is assigned a value but never used.","'getaRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.","ArrayExpression",["128"],"'getRedirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.",["129"],"no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","unexpected","'error' is assigned a value but never used.","'warningMessage' is assigned a value but never used.","'API' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"134","text":"135"},"Update the dependencies array to be: [preload]",{"range":"136","text":"137"},[1714,1716],"[match.params.productId, preload]",[1066,1068],"[preload]"]